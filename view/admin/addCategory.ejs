<%- include('../layouts/adminheader') %>
  </head>
  <style>
    .form-group textarea.form-control {
      /* background-color: #444; */
      border: none;
      color: #fff;
      /* Adjust height and font size as needed */
      height: 150px;
      /* Example height */
      font-size: 14px;
      /* Example font size */
    }

    .btn-block {
      width: 100%;
    }

    .tm-footer {
      padding: 1rem;
    }

    .tm-footer a {
      color: #007bff;
    }


    /* user profile */
.error {
  color: red;
  font-size: 0.875em;
  margin-top: 5px;
}

.success input {
  border-color: green;
}

.error input {
  border-color: red;
}


  </style>
  </head>

  <body>
    <nav class="navbar navbar-expand-xl">
      <div class="container h-100">
        <a class="navbar-brand" href="index.html">
          <h1 class="tm-site-title mb-0">Product Admin</h1>
        </a>
      </div>
    </nav>
    <div class="container tm-mt-big tm-mb-big">
      <div class="row">
        <div class="col-xl-9 col-lg-10 col-md-12 col-sm-12 mx-auto">
          <div class="tm-bg-primary-dark tm-block tm-block-h-auto">
            <div class="row">
              <div class="col-12">
                <h2 class="tm-block-title d-inline-block">Add Category</h2>
              </div>
            </div>
            <div class="row tm-edit-product-row">
              <div class="col-xl-12 col-lg-12 col-md-12">
                <form action="/admin/addCatogory" class="tm-edit-product-form" id="form" method="post">
                  <div class="form-group mb-3">
                    <label for="name">Category Name</label>
                    <input id="name" name="name" type="text" class="form-control validate" required />
                    <div class="error"></div> <!-- Error display -->
                  </div>
                  <div class="form-group mb-3">
                    <label for="description">Description</label>
                    <textarea id="description" name="description" class="form-control validate" rows="3" required></textarea>
                    <div class="error"></div> <!-- Error display -->
                  </div>
                  <div class="row">
                    <div class="col-6">
                      <button type="submit" class="btn btn-primary btn-block text-uppercase">Submit</button>
                    </div>
                    <div class="col-6">
                      <button type="button" class="btn btn-primary btn-block text-uppercase" onclick="window.history.back();">Back</button>
                    </div>
                  </div>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>




   
    <script src="js/jquery-3.3.1.min.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      $(document).ready(function() {
          const form = document.getElementById('form');
          const name = document.getElementById('name');
          const description = document.getElementById('description');
          
          form.addEventListener('submit', async e => {
              e.preventDefault();
              
              validateInputs();
              
              if (isValid()) {
                  const formData = {
                      name: name.value.trim(),
                      description: description.value.trim()
                  };
      
                  try {
                      const response = await fetch('/admin/addCategory', {
                          method: 'POST',
                          headers: {
                              'Content-Type': 'application/json',
                          },
                          body: JSON.stringify(formData),
                      });
      
                      const result = await response.json();
                      
                      if (response.ok) {
                          Swal.fire({
                              title: 'Success',
                              text: result.message,
                              icon: 'success',
                              confirmButtonText: 'OK'
                          }).then(() => {
                              window.location.href = '/admin/Category'; // Adjust the redirect URL as needed
                          });
                      } else {
                          Swal.fire({
                              title: 'Error',
                              text: result.message,
                              icon: 'error',
                              confirmButtonText: 'OK'
                          });
                      }
                  } catch (error) {
                      console.error('Error during fetch:', error);
                      Swal.fire({
                          title: 'Error',
                          text: 'An error occurred. Please try again.',
                          icon: 'error',
                          confirmButtonText: 'OK'
                      });
                  }
              }
          });
          
          const isValid = () => {
              return name.parentElement.classList.contains('success') &&
                     description.parentElement.classList.contains('success');
          };
      
          const setError = (element, message) => {
              const inputControl = element.parentElement;
              const errorDisplay = inputControl.querySelector('.error');
      
              errorDisplay.innerText = message;
              inputControl.classList.add('error');
              inputControl.classList.remove('success');
          };
      
          const setSuccess = element => {
              const inputControl = element.parentElement;
              const errorDisplay = inputControl.querySelector('.error');
      
              errorDisplay.innerText = '';
              inputControl.classList.add('success');
              inputControl.classList.remove('error');
          };
      
          const validateInputs = () => {
              const nameValue = name.value.trim();
              const descriptionValue = description.value.trim();
      
              // Regex to check if the name contains only letters and spaces
              const nameRegex = /^[A-Za-z\s]+$/;
              
              if (nameValue === '') {
                  setError(name, 'Category name is required');
              } else if (!nameRegex.test(nameValue)) {
                  setError(name, 'Category name should only contain letters and spaces');
              } else {
                  setSuccess(name);
              }
      
              // Validate description (you can customize this as needed)
              if (descriptionValue === '') {
                  setError(description, 'Description is required');
              } else {
                  setSuccess(description);
              }
          };
      });
  </script>
    <%- include('../layouts/footer') %>