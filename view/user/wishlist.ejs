<%- include('../layouts/userheader') %>

<!-- Font Awesome CDN -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

</head>

<style>
 /* Navbar Styles */
.navbar {
    background-color: #343a40; /* Dark background */
    padding: 1rem 1rem; /* Padding */
}

.navbar-brand h1 {
    color: #ffffff; /* White text for the brand name */
    font-size: 2rem; /* Adjust as needed */
}

.navbar-nav .nav-item .nav-link {
    color: #ffffff; /* White text for nav links */
    margin-right: 1rem; /* Spacing between links */
}

.navbar-nav .nav-item .nav-link:hover {
    color: #ffc107; /* Yellow text on hover */
}

.navbar-nav .nav-item.active .nav-link {
    color: #ffc107; /* Yellow text for the active link */
}

.navbar-toggler {
    border-color: rgba(255, 255, 255, 0.1); /* Light border for toggler */
}

.navbar-toggler .navbar-toggler-icon {
    background-image: url("data:image/svg+xml;...");
}

/* Breadcrumb Section Styles */
.breadcrumb-option {
    background: #f8f9fa; /* Light background */
    padding: 3.5rem 0; /* Padding */
    margin-bottom: 140px; /* Adjust the margin as needed */
}

.breadcrumb__text h4 {
    text-align: center; /* Center the text */
    margin: 0; /* Remove margin */
    font-size: 40px; /* Adjust as needed */
    color: #333333; /* Dark text color */
}

.breadcrumb__links {
    text-align: center; /* Center the breadcrumb links */
    font-size: 1rem; /* Adjust as needed */
    color: #777777; /* Light grey color */
}

/* Ensure breadcrumb links have some margin and are styled correctly */
.breadcrumb__links a {
    color: #007bff; /* Primary color for links */
    text-decoration: none; /* Remove underline */
}

.breadcrumb__links a:hover {
    text-decoration: underline; /* Underline on hover */
}

.breadcrumb__links span {
    color: #333; /* Dark color for current page */
}

.bg-black {
    background-color: #000000;
}

.topper {
    color: #ffffff;
}

.topper .icon {
    font-size: 18px;
    color: #ffffff;
}

.topper .text {
    color: #ffffff;
}

.hero-wrap {
    padding: 60px 0;
    color: #ffffff;
    text-align: center;
}

.bread {
    font-size: 36px;
    margin-bottom: 0;
}
.left-sidebar {
  background: #f8f9fa;
  padding: 20px;
  border-radius: 5px;
  margin-bottom: 30px;
}

.sidebar-options {
  list-style: none;
  padding: 0;
  margin: 0;
}

.sidebar-options li {
  margin-bottom: 15px;
}

.sidebar-options li a {
  text-decoration: none;
  color: #333;
  font-size: 16px;
  display: block;
  padding: 10px 15px;
  border-radius: 5px;
  transition: background 0.3s, color 0.3s;
}

.sidebar-options li.active a,
.sidebar-options li a:hover {
  background: #007bff;
  color: #fff;
}

/* Wishlist Section Styles */
.wishlist-section {
    background-color: #f9f9f9;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
}

.wishlist-section h5 {
    font-size: 1.25rem;
    margin-bottom: 10px;
}

.wishlist-table {
    width: 100%;
    border-collapse: collapse;
}

.wishlist-table th, .wishlist-table td {
    padding: 15px;
    border: 1px solid #ddd;
}

.wishlist-table th {
    background-color: #f8f9fa;
}

.wishlist-table img {
    width: 80px;
    height: auto;
}

.wishlist-table .actions {
    display: flex;
    gap: 10px;
}

.wishlist-table .actions .btn {
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 4px;
    transition: background 0.3s;
    cursor: pointer;
}

.wishlist-table .actions .btn.add-to-cart {
    background: #007bff;
    color: #fff;
}

.wishlist-table .actions .btn.add-to-cart:hover {
    background: #0056b3;
}

.wishlist-table .actions .btn.delete {
    background: #dc3545;
    color: #fff;
}

.wishlist-table .actions .btn.delete:hover {
    background: #c82333;
}

@keyframes fadeInUp {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

</style>
  <!-- Navbar section -->
  <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
    <div class="container">
        <a class="navbar-brand" href="#"><h1 class="logoname">GAMZY</h1></a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#ftco-nav" aria-controls="ftco-nav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="oi oi-menu"></span> Menu
        </button>

        <div class="collapse navbar-collapse" id="ftco-nav">
            <ul class="navbar-nav ml-auto">
                <li class="nav-item"><a href="/" class="nav-link">Home</a></li>
                <li class="nav-item dropdown active">
                    <a class="nav-link" href="#" aria-haspopup="true" aria-expanded="false">Shop</a>
                    <!-- Add dropdown content if needed -->
                </li>
                <li class="nav-item"><a href="about.html" class="nav-link">About</a></li>
                <li class="nav-item"><a href="blog.html" class="nav-link">Blog</a></li>
                <li class="nav-item"><a href="contact.html" class="nav-link">Contact</a></li>
                <li class="nav-item cta cta-colored"><a href="/user/productCart" class="nav-link"><span class="fas fa-shopping-cart"></span></a></li>
            </ul>
        </div>
    </div>
</nav>
<!-- End Navbar section -->

 <!-- Breadcrumb Section Begin -->
<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">
                    <h4>My Wishlist</h4>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- End Breadcrumb Section -->

<section class="ftco-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-3">
                <div class="left-sidebar">
                    <ul class="sidebar-options">
                        <li><a href="/user/myaccount">My Profile</a></li>
                        <li><a href="/user/wishlist" class="active">Wishlist</a></li>
                        <li><a href="/user/Userorders">Orders</a></li>
                        <li><a href="/user/address">Address</a></li>
                        <li><a href="/user/wallet">Wallet</a></li>
                        <li><a href="/user/signout">Signout</a></li>
                    </ul>
                </div>
            </div>
            <div class="col-md-9 ftco-animate">
                <div class="wishlist-section">
                    <h5>My Wishlist</h5>
                    <table class="wishlist-table">
                        <thead>
                            <tr>
                                <th>Image</th>
                                <th>Name</th>
                                <th>Price</th>
                                <th>Stock Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
<!-- Wishlist Page -->
<tbody>
    <% if (wishlist && wishlist.products && wishlist.products.length > 0) { %>
        <% wishlist.products.forEach(item => { %>
            <tr>
                <td>
                    <% if (item.product && item.product.variants && item.product.variants.length > 0 && item.product.variants[0].images && item.product.variants[0].images.length > 0) { %>
                        <img src="/uploads/<%= item.product.variants[0].images[0] %>" alt="Product Image" class="wishlist-image">
                    <% } else { %>
                        <img src="/uploads/default-image.jpg" alt="Default Image" class="wishlist-image">
                    <% } %>
                </td>
                <td><%= item.product.productname %></td>
                <td>â‚¹<%= item.product.price %></td>
                <td><%= item.variant && item.variant.quantity < 1 ? 'Out of Stock' : 'In Stock' %></td>
                <td class="actions">
                    <button class="btn add-to-cart" data-product-id="<%= item.product._id %>" data-variant-id="<%= item.variant._id %>">
                        <i class="fas fa-shopping-cart"></i>
                    </button>
                    <button class="btn delete"><i class="fas fa-trash"></i></button>
                </td>
            </tr>
        <% }); %>
    <% } else { %>
        <tr>
            <td colspan="5">No items in your wishlist</td>
        </tr>
    <% } %>
</tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- End Wishlist Section -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  
<script src="/js/jquery.min.js"></script>
<script src="/js/jquery-migrate-3.0.1.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Add to Cart Button
        document.querySelectorAll('.add-to-cart').forEach(button => {
            button.addEventListener('click', async function(event) {
                event.preventDefault(); // Prevent default link behavior
    
                // Get product ID and variant ID from data attributes
                const productId = this.getAttribute('data-product-id');
                const variantId = this.getAttribute('data-variant-id');
    
                console.log("product", productId);
                console.log("variant", variantId);
    
                const data = {
                    productId: productId,
                    variantId: variantId,
                    quantity: 1 // You can set a default quantity or get it from somewhere
                };
    
                try {
                    const response = await fetch('/user/addToCart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });
    
                    const result = await response.json(); 
    
                    if (response.status === 401) {
                        Swal.fire({
                            title: 'Login Required',
                            text: result.error,
                            icon: 'warning',
                            confirmButtonText: 'Login'
                        }).then(() => {
                            window.location.href = '/user/login';
                        });
                    } else if (response.ok) {
                        Swal.fire({
                            title: 'Success',
                            text: result.message,
                            icon: 'success',
                            confirmButtonText: 'OK'
                        });
    
                        // Remove item from wishlist
                        await fetch('/user/removeFromWishlist', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                productId: productId,
                                variantId: variantId
                            })
                        });
    
                        // Refresh the page or update the wishlist UI
                        location.reload(); // Reloads the page to reflect changes
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: result.error || 'An error occurred. Please try again.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                } catch (error) {
                    console.error('Error during fetch:', error);
                    Swal.fire({
                        title: 'Error',
                        text: 'An error occurred. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        });
    
        // Delete Button
        document.querySelectorAll('.delete').forEach(button => {
            button.addEventListener('click', async function(event) {
                event.preventDefault(); // Prevent default link behavior
    
                // Get product ID and variant ID from data attributes
                const productId = this.getAttribute('data-product-id');
                const variantId = this.getAttribute('data-variant-id');
    
                try {
                    const response = await fetch('/user/removeFromWishlist', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            productId: productId,
                            variantId: variantId
                        })
                    });
    
                    const result = await response.json();
    
                    if (response.ok) {
                        Swal.fire({
                            title: 'Deleted',
                            text: 'Item removed from wishlist.',
                            icon: 'success',
                            confirmButtonText: 'OK'
                        });
    
                        // Refresh the page or update the wishlist UI
                        location.reload(); // Reloads the page to reflect changes
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: result.error || 'An error occurred. Please try again.',
                            icon: 'error',
                            confirmButtonText: 'OK'
                        });
                    }
                } catch (error) {
                    console.error('Error during fetch:', error);
                    Swal.fire({
                        title: 'Error',
                        text: 'An error occurred. Please try again.',
                        icon: 'error',
                        confirmButtonText: 'OK'
                    });
                }
            });
        });
    });
    </script>

<script>
     document.addEventListener("DOMContentLoaded", function() {
    var currentLocation = window.location.href;
    var menuItem = document.querySelectorAll(".sidebar-options li a");

    // Loop through all sidebar items
    menuItem.forEach(function(item) {
        // Check if the href attribute of the link matches the current URL
        if (item.href === currentLocation) {
            // Add 'active' class to the parent <li> element
            item.parentElement.classList.add("active");
        } else {
            // Remove 'active' class if it's not the current URL
            item.parentElement.classList.remove("active");
        }
    });
});
</script>
    
